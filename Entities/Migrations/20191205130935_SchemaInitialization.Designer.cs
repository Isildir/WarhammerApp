// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarhammerProfessionApp.Entities;

namespace WarhammerProfessionApp.Migrations
{
    [DbContext(typeof(ProfessionsContext))]
    [Migration("20191205130935_SchemaInitialization")]
    partial class SchemaInitialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("ItemType")
                        .HasColumnType("tinyint");

                    b.Property<byte>("MoneyType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<byte>("Rarity")
                        .HasColumnType("tinyint");

                    b.Property<int>("Weigth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionAbilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProfessionId")
                        .HasColumnType("int");

                    b.Property<byte>("Quantity")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionId");

                    b.ToTable("ProfessionAbilities");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionAbility", b =>
                {
                    b.Property<int>("ProfessionAbilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("AbilityId")
                        .HasColumnType("int");

                    b.HasKey("ProfessionAbilitiesId", "AbilityId");

                    b.HasIndex("AbilityId");

                    b.ToTable("ProfessionAbility");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionItem", b =>
                {
                    b.Property<int>("ProfessionsItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<byte>("Quality")
                        .HasColumnType("tinyint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProfessionsItemId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("ProfessionItem");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProfessionId")
                        .HasColumnType("int");

                    b.Property<byte>("Quantity")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionId");

                    b.ToTable("ProfessionItems");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionProfession", b =>
                {
                    b.Property<int>("EntranceProfessionId")
                        .HasColumnType("int");

                    b.Property<int>("OutputProfessionId")
                        .HasColumnType("int");

                    b.HasKey("EntranceProfessionId", "OutputProfessionId");

                    b.HasIndex("OutputProfessionId");

                    b.ToTable("ProfessionProfession");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionSkill", b =>
                {
                    b.Property<int>("ProfessionSkillsId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("ProfessionSkillsId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("ProfessionSkill");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProfessionId")
                        .HasColumnType("int");

                    b.Property<byte>("Quantity")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionId");

                    b.ToTable("ProfessionSkills");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInformations")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte>("Agility")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Attacks")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CloseCombat")
                        .HasColumnType("tinyint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<byte>("Hitpoints")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<byte>("Inteligence")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Magic")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("Polish")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ProfessionLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ProfessionRaceAllowed")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Resistance")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Shooting")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Speed")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Stamina")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Willpower")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("SkillLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Trait")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionAbilities", b =>
                {
                    b.HasOne("WarhammerProfessionApp.Entities.Models.Profession", "Profession")
                        .WithMany("Abilities")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionAbility", b =>
                {
                    b.HasOne("WarhammerProfessionApp.Entities.Models.Ability", "Ability")
                        .WithMany("Professions")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionAbilities", "ProfessionAbilities")
                        .WithMany("Abilities")
                        .HasForeignKey("ProfessionAbilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionItem", b =>
                {
                    b.HasOne("WarhammerProfessionApp.Entities.Models.Item", "Item")
                        .WithMany("Professions")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionItems", "ProfessionItems")
                        .WithMany("Items")
                        .HasForeignKey("ProfessionsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionItems", b =>
                {
                    b.HasOne("WarhammerProfessionApp.Entities.Models.Profession", "Profession")
                        .WithMany("Equipment")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionProfession", b =>
                {
                    b.HasOne("WarhammerProfessionApp.Entities.Models.Profession", "EntranceProfession")
                        .WithMany("OutputProfessions")
                        .HasForeignKey("EntranceProfessionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WarhammerProfessionApp.Entities.Models.Profession", "OutputProfession")
                        .WithMany("EntranceProfessions")
                        .HasForeignKey("OutputProfessionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionSkill", b =>
                {
                    b.HasOne("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionSkills", "ProfessionSkills")
                        .WithMany("Skills")
                        .HasForeignKey("ProfessionSkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarhammerProfessionApp.Entities.Models.Skill", "Skill")
                        .WithMany("Professions")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.ManyToMany.ProfessionSkills", b =>
                {
                    b.HasOne("WarhammerProfessionApp.Entities.Models.Profession", "Profession")
                        .WithMany("Skills")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WarhammerProfessionApp.Entities.Models.Profession", b =>
                {
                    b.HasOne("WarhammerProfessionApp.Entities.Models.Image", "Image")
                        .WithMany("Professions")
                        .HasForeignKey("ImageId");
                });
#pragma warning restore 612, 618
        }
    }
}
