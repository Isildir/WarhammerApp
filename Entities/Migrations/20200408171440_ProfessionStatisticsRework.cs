using Microsoft.EntityFrameworkCore.Migrations;

namespace WarhammerProfessionApp.Migrations
{
    public partial class ProfessionStatisticsRework : Migration
    {
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ProfessionStatistic");

            migrationBuilder.AddColumn<byte>(
                name: "Agility",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "Attacks",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "CloseCombat",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "Hitpoints",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "Inteligence",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "Magic",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "Polish",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "Resistance",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "Shooting",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "Speed",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "Stamina",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.AddColumn<byte>(
                name: "Willpower",
                table: "Professions",
                type: "tinyint",
                nullable: false,
                defaultValue: (byte)0);

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Willpower" },
                values: new object[] { (byte)5, (byte)2, (byte)10, (byte)10, (byte)5, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Shooting" },
                values: new object[] { (byte)10, (byte)1, (byte)10, (byte)2, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CloseCombat", "Hitpoints", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)2, (byte)10, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)5, (byte)2, (byte)10, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Polish", "Resistance", "Willpower" },
                values: new object[] { (byte)10, (byte)2, (byte)5, (byte)10, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Polish", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)10, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 7,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)10, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 8,
                columns: new[] { "CloseCombat", "Hitpoints", "Polish", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)2, (byte)5, (byte)10, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 9,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Stamina" },
                values: new object[] { (byte)10, (byte)10, (byte)2, (byte)5, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 10,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Polish", "Resistance", "Shooting", "Stamina" },
                values: new object[] { (byte)5, (byte)1, (byte)10, (byte)2, (byte)5, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 11,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Resistance", "Willpower" },
                values: new object[] { (byte)10, (byte)15, (byte)2, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 12,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Speed", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)10, (byte)2, (byte)5, (byte)5, (byte)1, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 13,
                columns: new[] { "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)2, (byte)5, (byte)5, (byte)5, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 14,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Magic", "Polish", "Resistance", "Willpower" },
                values: new object[] { (byte)5, (byte)2, (byte)5, (byte)1, (byte)10, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 15,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Willpower" },
                values: new object[] { (byte)10, (byte)10, (byte)2, (byte)10, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 16,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)5, (byte)10, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 17,
                columns: new[] { "CloseCombat", "Hitpoints", "Resistance", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)2, (byte)10, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 18,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)10, (byte)3, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 19,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Resistance", "Shooting" },
                values: new object[] { (byte)10, (byte)3, (byte)5, (byte)5, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 20,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)10, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 21,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Willpower" },
                values: new object[] { (byte)5, (byte)5, (byte)2, (byte)10, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 22,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)10, (byte)2, (byte)10, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 23,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)1, (byte)10, (byte)2, (byte)5, (byte)10, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 24,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Resistance", "Shooting", "Stamina" },
                values: new object[] { (byte)10, (byte)10, (byte)2, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 25,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Resistance", "Stamina" },
                values: new object[] { (byte)5, (byte)1, (byte)10, (byte)3, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 26,
                columns: new[] { "Attacks", "CloseCombat", "Hitpoints", "Polish", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)1, (byte)10, (byte)2, (byte)5, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 27,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Polish", "Willpower" },
                values: new object[] { (byte)10, (byte)2, (byte)10, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 28,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting" },
                values: new object[] { (byte)5, (byte)5, (byte)2, (byte)10, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 29,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)5, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 30,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)5, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 31,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)10, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 32,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)10, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 33,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Stamina" },
                values: new object[] { (byte)5, (byte)5, (byte)2, (byte)5, (byte)5, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 34,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Stamina" },
                values: new object[] { (byte)10, (byte)2, (byte)5, (byte)5, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 35,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting", "Willpower" },
                values: new object[] { (byte)5, (byte)5, (byte)2, (byte)10, (byte)10, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 36,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)2, (byte)5, (byte)5, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 37,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)1, (byte)10, (byte)2, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 38,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Polish", "Willpower" },
                values: new object[] { (byte)10, (byte)2, (byte)10, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 39,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)5, (byte)5, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 40,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting", "Stamina" },
                values: new object[] { (byte)5, (byte)10, (byte)2, (byte)10, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 41,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)10, (byte)2, (byte)5, (byte)10, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 42,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Resistance", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)5, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 43,
                columns: new[] { "CloseCombat", "Hitpoints", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)3, (byte)10, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 44,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Resistance", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)5, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 45,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Stamina" },
                values: new object[] { (byte)10, (byte)1, (byte)15, (byte)2, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 46,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting", "Willpower" },
                values: new object[] { (byte)5, (byte)10, (byte)2, (byte)5, (byte)10, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 47,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Polish", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)5, (byte)2, (byte)5, (byte)10, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 48,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)1, (byte)10, (byte)2, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 49,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Magic", "Polish", "Willpower" },
                values: new object[] { (byte)5, (byte)2, (byte)10, (byte)1, (byte)5, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 50,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)5, (byte)2, (byte)5, (byte)5, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 51,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)5, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 52,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)10, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 53,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Polish", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)2, (byte)5, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 54,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)1, (byte)10, (byte)3, (byte)5, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 55,
                columns: new[] { "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)2, (byte)10, (byte)10, (byte)5, (byte)5, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 56,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting" },
                values: new object[] { (byte)15, (byte)5, (byte)2, (byte)5, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 57,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Polish", "Willpower" },
                values: new object[] { (byte)10, (byte)2, (byte)10, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 58,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Shooting", "Stamina" },
                values: new object[] { (byte)10, (byte)1, (byte)10, (byte)2, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 59,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)1, (byte)10, (byte)2, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 60,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)1, (byte)10, (byte)3, (byte)10, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 61,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Magic", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)1, (byte)20, (byte)6, (byte)20, (byte)3, (byte)25, (byte)15, (byte)20, (byte)15, (byte)30 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 62,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Magic", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)15, (byte)5, (byte)35, (byte)4, (byte)20, (byte)15, (byte)15, (byte)5, (byte)40 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 63,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)1, (byte)25, (byte)6, (byte)20, (byte)30, (byte)10, (byte)15, (byte)10, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 64,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting", "Willpower" },
                values: new object[] { (byte)15, (byte)10, (byte)4, (byte)10, (byte)25, (byte)10, (byte)5 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 65,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Polish", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)1, (byte)15, (byte)6, (byte)10, (byte)15, (byte)10, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 66,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)1, (byte)15, (byte)4, (byte)10, (byte)10, (byte)15, (byte)15, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 67,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Willpower" },
                values: new object[] { (byte)15, (byte)1, (byte)10, (byte)4, (byte)20, (byte)30, (byte)10, (byte)10, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 68,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)4, (byte)20, (byte)20, (byte)5, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 69,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)30, (byte)2, (byte)40, (byte)8, (byte)25, (byte)40, (byte)25, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 70,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)10, (byte)4, (byte)15, (byte)20, (byte)5, (byte)10, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 71,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)2, (byte)20, (byte)6, (byte)10, (byte)20, (byte)20, (byte)30, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 72,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)10, (byte)4, (byte)20, (byte)5, (byte)15, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 73,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)2, (byte)25, (byte)6, (byte)20, (byte)30, (byte)20, (byte)20, (byte)15, (byte)25 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 74,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)10, (byte)4, (byte)10, (byte)15, (byte)10, (byte)10, (byte)5, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 75,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)10, (byte)4, (byte)10, (byte)20, (byte)10, (byte)5, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 76,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)1, (byte)20, (byte)6, (byte)25, (byte)30, (byte)15, (byte)20, (byte)15, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 77,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)10, (byte)4, (byte)25, (byte)20, (byte)5, (byte)10, (byte)5, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 78,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)25, (byte)2, (byte)20, (byte)6, (byte)20, (byte)15, (byte)30, (byte)15, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 79,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)2, (byte)30, (byte)6, (byte)15, (byte)20, (byte)15, (byte)30, (byte)15, (byte)35 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 80,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)1, (byte)20, (byte)4, (byte)15, (byte)20, (byte)20, (byte)10, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 81,
                columns: new[] { "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)4, (byte)30, (byte)25, (byte)10, (byte)10, (byte)10, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 82,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Polish", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)4, (byte)30, (byte)15, (byte)10, (byte)10, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 83,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)40, (byte)1, (byte)20, (byte)6, (byte)25, (byte)25, (byte)10, (byte)20, (byte)10, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 84,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Willpower" },
                values: new object[] { (byte)15, (byte)1, (byte)10, (byte)5, (byte)30, (byte)35, (byte)10, (byte)10, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 85,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Magic", "Polish", "Resistance", "Shooting", "Willpower" },
                values: new object[] { (byte)15, (byte)10, (byte)4, (byte)30, (byte)3, (byte)15, (byte)10, (byte)10, (byte)35 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 86,
                columns: new[] { "Agility", "Hitpoints", "Inteligence", "Polish", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)3, (byte)10, (byte)10, (byte)10, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 87,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)2, (byte)35, (byte)8, (byte)15, (byte)15, (byte)20, (byte)10, (byte)20, (byte)25 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 88,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)10, (byte)4, (byte)25, (byte)5, (byte)10, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 89,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)1, (byte)20, (byte)6, (byte)25, (byte)15, (byte)15, (byte)20, (byte)10, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 90,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)2, (byte)30, (byte)7, (byte)15, (byte)25, (byte)20, (byte)20, (byte)20, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 91,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)15, (byte)4, (byte)10, (byte)15, (byte)10, (byte)20, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 92,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)1, (byte)15, (byte)4, (byte)5, (byte)10, (byte)5, (byte)10, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 93,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)1, (byte)20, (byte)4, (byte)15, (byte)10, (byte)20, (byte)10, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 94,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)1, (byte)20, (byte)5, (byte)10, (byte)10, (byte)15, (byte)15, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 95,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)30, (byte)1, (byte)20, (byte)4, (byte)20, (byte)25, (byte)10, (byte)20, (byte)10, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 96,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)1, (byte)25, (byte)4, (byte)5, (byte)5, (byte)15, (byte)15, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 97,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)1, (byte)20, (byte)4, (byte)10, (byte)20, (byte)10, (byte)15, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 98,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)30, (byte)2, (byte)25, (byte)4, (byte)20, (byte)20, (byte)10, (byte)25, (byte)10, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 99,
                columns: new[] { "Agility", "Attacks", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)25, (byte)1, (byte)4, (byte)10, (byte)15, (byte)10, (byte)35, (byte)10, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 100,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)2, (byte)35, (byte)6, (byte)10, (byte)15, (byte)15, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 101,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)10, (byte)4, (byte)15, (byte)25, (byte)10, (byte)10, (byte)5, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 102,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)1, (byte)15, (byte)4, (byte)20, (byte)20, (byte)10, (byte)15, (byte)5, (byte)35 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 103,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)4, (byte)30, (byte)15, (byte)5, (byte)5, (byte)5, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 104,
                columns: new[] { "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)5, (byte)4, (byte)20, (byte)20, (byte)10, (byte)5, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 105,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)1, (byte)20, (byte)6, (byte)10, (byte)20, (byte)10, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 106,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Magic", "Polish", "Resistance", "Shooting", "Willpower" },
                values: new object[] { (byte)10, (byte)5, (byte)3, (byte)20, (byte)2, (byte)10, (byte)5, (byte)5, (byte)25 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 107,
                columns: new[] { "Agility", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)25, (byte)10, (byte)4, (byte)10, (byte)5, (byte)10, (byte)5, (byte)10 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 108,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Magic", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)1, (byte)15, (byte)5, (byte)15, (byte)2, (byte)20, (byte)10, (byte)15, (byte)10, (byte)25 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 109,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)2, (byte)40, (byte)8, (byte)30, (byte)30, (byte)30 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 110,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)1, (byte)25, (byte)6, (byte)15, (byte)15, (byte)20 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 111,
                columns: new[] { "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Stamina", "Willpower" },
                values: new object[] { (byte)10, (byte)4, (byte)15, (byte)15, (byte)10, (byte)5, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 112,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Polish", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)20, (byte)1, (byte)20, (byte)4, (byte)15, (byte)10, (byte)20, (byte)20, (byte)10, (byte)15 });

            migrationBuilder.UpdateData(
                table: "Professions",
                keyColumn: "Id",
                keyValue: 113,
                columns: new[] { "Agility", "Attacks", "CloseCombat", "Hitpoints", "Inteligence", "Resistance", "Shooting", "Stamina", "Willpower" },
                values: new object[] { (byte)15, (byte)1, (byte)20, (byte)6, (byte)20, (byte)10, (byte)20, (byte)10, (byte)15 });
        }

        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Agility",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "Attacks",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "CloseCombat",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "Hitpoints",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "Inteligence",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "Magic",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "Polish",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "Resistance",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "Shooting",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "Speed",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "Stamina",
                table: "Professions");

            migrationBuilder.DropColumn(
                name: "Willpower",
                table: "Professions");

            migrationBuilder.CreateTable(
                name: "ProfessionStatistic",
                columns: table => new
                {
                    ProfessionId = table.Column<int>(nullable: false),
                    StatisticId = table.Column<byte>(nullable: false),
                    Value = table.Column<byte>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProfessionStatistic", x => new { x.ProfessionId, x.StatisticId });
                    table.ForeignKey(
                        name: "FK_ProfessionStatistic_Professions_ProfessionId",
                        column: x => x.ProfessionId,
                        principalTable: "Professions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ProfessionStatistic_Statistics_StatisticId",
                        column: x => x.StatisticId,
                        principalTable: "Statistics",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "ProfessionStatistic",
                columns: new[] { "ProfessionId", "StatisticId", "Value" },
                values: new object[,]
                {
                    { 1, (byte)1, (byte)5 },
                    { 76, (byte)8, (byte)30 },
                    { 76, (byte)7, (byte)20 },
                    { 76, (byte)5, (byte)20 },
                    { 76, (byte)6, (byte)25 },
                    { 76, (byte)4, (byte)15 },
                    { 76, (byte)3, (byte)15 },
                    { 76, (byte)2, (byte)20 },
                    { 76, (byte)13, (byte)0 },
                    { 76, (byte)1, (byte)20 },
                    { 75, (byte)14, (byte)0 },
                    { 75, (byte)10, (byte)4 },
                    { 75, (byte)9, (byte)0 },
                    { 75, (byte)8, (byte)20 },
                    { 75, (byte)7, (byte)10 },
                    { 75, (byte)5, (byte)20 },
                    { 75, (byte)6, (byte)10 },
                    { 75, (byte)4, (byte)10 },
                    { 76, (byte)9, (byte)1 },
                    { 75, (byte)3, (byte)5 },
                    { 76, (byte)10, (byte)6 },
                    { 77, (byte)1, (byte)10 },
                    { 78, (byte)6, (byte)20 },
                    { 78, (byte)4, (byte)15 },
                    { 78, (byte)3, (byte)15 },
                    { 78, (byte)2, (byte)30 },
                    { 78, (byte)13, (byte)0 },
                    { 78, (byte)1, (byte)20 },
                    { 77, (byte)14, (byte)0 },
                    { 77, (byte)10, (byte)4 },
                    { 77, (byte)9, (byte)0 },
                    { 77, (byte)8, (byte)20 },
                    { 77, (byte)7, (byte)20 },
                    { 77, (byte)5, (byte)10 },
                    { 77, (byte)6, (byte)25 },
                    { 77, (byte)4, (byte)5 },
                    { 77, (byte)3, (byte)5 },
                    { 77, (byte)2, (byte)10 },
                    { 77, (byte)13, (byte)0 },
                    { 76, (byte)14, (byte)0 },
                    { 78, (byte)5, (byte)25 },
                    { 75, (byte)2, (byte)5 },
                    { 75, (byte)1, (byte)10 },
                    { 73, (byte)2, (byte)20 },
                    { 73, (byte)13, (byte)0 },
                    { 73, (byte)1, (byte)25 },
                    { 72, (byte)14, (byte)0 },
                    { 72, (byte)10, (byte)4 },
                    { 72, (byte)9, (byte)0 },
                    { 72, (byte)8, (byte)0 },
                    { 72, (byte)7, (byte)10 },
                    { 72, (byte)5, (byte)10 },
                    { 72, (byte)6, (byte)20 },
                    { 72, (byte)4, (byte)5 },
                    { 72, (byte)3, (byte)5 },
                    { 72, (byte)2, (byte)15 },
                    { 72, (byte)13, (byte)0 },
                    { 72, (byte)1, (byte)10 },
                    { 71, (byte)14, (byte)0 },
                    { 71, (byte)10, (byte)6 },
                    { 73, (byte)3, (byte)15 },
                    { 75, (byte)13, (byte)0 },
                    { 73, (byte)4, (byte)20 },
                    { 73, (byte)5, (byte)20 },
                    { 74, (byte)14, (byte)0 },
                    { 74, (byte)10, (byte)4 },
                    { 74, (byte)9, (byte)0 },
                    { 74, (byte)8, (byte)15 },
                    { 74, (byte)7, (byte)20 },
                    { 74, (byte)5, (byte)5 },
                    { 74, (byte)6, (byte)10 },
                    { 74, (byte)4, (byte)10 },
                    { 74, (byte)3, (byte)5 },
                    { 74, (byte)2, (byte)10 },
                    { 74, (byte)13, (byte)0 },
                    { 74, (byte)1, (byte)10 },
                    { 73, (byte)14, (byte)0 },
                    { 73, (byte)10, (byte)6 },
                    { 73, (byte)9, (byte)2 },
                    { 73, (byte)8, (byte)30 },
                    { 73, (byte)7, (byte)25 },
                    { 73, (byte)6, (byte)20 },
                    { 78, (byte)7, (byte)20 },
                    { 78, (byte)8, (byte)0 },
                    { 78, (byte)9, (byte)2 },
                    { 83, (byte)9, (byte)1 },
                    { 83, (byte)8, (byte)25 },
                    { 83, (byte)7, (byte)20 },
                    { 83, (byte)5, (byte)40 },
                    { 83, (byte)6, (byte)25 },
                    { 83, (byte)4, (byte)10 },
                    { 83, (byte)3, (byte)10 },
                    { 83, (byte)2, (byte)20 },
                    { 83, (byte)13, (byte)0 },
                    { 83, (byte)1, (byte)20 },
                    { 82, (byte)14, (byte)0 },
                    { 82, (byte)10, (byte)4 },
                    { 82, (byte)9, (byte)0 },
                    { 82, (byte)8, (byte)15 },
                    { 82, (byte)7, (byte)20 },
                    { 82, (byte)5, (byte)15 },
                    { 82, (byte)6, (byte)30 },
                    { 83, (byte)10, (byte)6 },
                    { 82, (byte)4, (byte)10 },
                    { 83, (byte)14, (byte)0 },
                    { 84, (byte)13, (byte)0 },
                    { 85, (byte)5, (byte)15 },
                    { 85, (byte)6, (byte)30 },
                    { 85, (byte)4, (byte)10 },
                    { 85, (byte)3, (byte)0 },
                    { 85, (byte)2, (byte)10 },
                    { 85, (byte)13, (byte)0 },
                    { 85, (byte)1, (byte)10 },
                    { 84, (byte)14, (byte)0 },
                    { 84, (byte)10, (byte)5 },
                    { 84, (byte)9, (byte)1 },
                    { 84, (byte)8, (byte)35 },
                    { 84, (byte)7, (byte)20 },
                    { 84, (byte)5, (byte)15 },
                    { 84, (byte)6, (byte)30 },
                    { 84, (byte)4, (byte)10 },
                    { 84, (byte)3, (byte)0 },
                    { 84, (byte)2, (byte)10 },
                    { 84, (byte)1, (byte)10 },
                    { 82, (byte)3, (byte)10 },
                    { 82, (byte)2, (byte)0 },
                    { 82, (byte)13, (byte)0 },
                    { 80, (byte)2, (byte)20 },
                    { 80, (byte)13, (byte)0 },
                    { 80, (byte)1, (byte)20 },
                    { 79, (byte)14, (byte)0 },
                    { 79, (byte)10, (byte)6 },
                    { 79, (byte)9, (byte)2 },
                    { 79, (byte)8, (byte)20 },
                    { 79, (byte)7, (byte)35 },
                    { 79, (byte)5, (byte)15 },
                    { 79, (byte)6, (byte)15 },
                    { 79, (byte)4, (byte)15 },
                    { 79, (byte)3, (byte)15 },
                    { 79, (byte)2, (byte)30 },
                    { 79, (byte)13, (byte)0 },
                    { 79, (byte)1, (byte)30 },
                    { 78, (byte)14, (byte)0 },
                    { 78, (byte)10, (byte)6 },
                    { 80, (byte)3, (byte)10 },
                    { 80, (byte)4, (byte)20 },
                    { 80, (byte)6, (byte)15 },
                    { 80, (byte)5, (byte)15 },
                    { 82, (byte)1, (byte)0 },
                    { 81, (byte)14, (byte)0 },
                    { 81, (byte)10, (byte)4 },
                    { 81, (byte)9, (byte)0 },
                    { 81, (byte)8, (byte)25 },
                    { 81, (byte)7, (byte)20 },
                    { 81, (byte)5, (byte)0 },
                    { 81, (byte)6, (byte)30 },
                    { 71, (byte)9, (byte)2 },
                    { 81, (byte)4, (byte)10 },
                    { 81, (byte)2, (byte)10 },
                    { 81, (byte)13, (byte)0 },
                    { 81, (byte)1, (byte)10 },
                    { 80, (byte)14, (byte)0 },
                    { 80, (byte)10, (byte)4 },
                    { 80, (byte)9, (byte)1 },
                    { 80, (byte)8, (byte)0 },
                    { 80, (byte)7, (byte)20 },
                    { 81, (byte)3, (byte)10 },
                    { 71, (byte)8, (byte)20 },
                    { 71, (byte)7, (byte)10 },
                    { 71, (byte)5, (byte)10 },
                    { 62, (byte)7, (byte)40 },
                    { 62, (byte)5, (byte)20 },
                    { 62, (byte)6, (byte)35 },
                    { 62, (byte)4, (byte)15 },
                    { 62, (byte)3, (byte)5 },
                    { 62, (byte)2, (byte)15 },
                    { 62, (byte)13, (byte)0 },
                    { 62, (byte)1, (byte)15 },
                    { 61, (byte)14, (byte)3 },
                    { 61, (byte)10, (byte)6 },
                    { 61, (byte)9, (byte)1 },
                    { 61, (byte)8, (byte)25 },
                    { 61, (byte)7, (byte)30 },
                    { 61, (byte)5, (byte)15 },
                    { 61, (byte)6, (byte)20 },
                    { 61, (byte)4, (byte)15 },
                    { 61, (byte)3, (byte)15 },
                    { 62, (byte)8, (byte)20 },
                    { 61, (byte)2, (byte)20 },
                    { 62, (byte)9, (byte)0 },
                    { 62, (byte)14, (byte)4 },
                    { 64, (byte)4, (byte)0 },
                    { 64, (byte)3, (byte)0 },
                    { 64, (byte)2, (byte)10 },
                    { 64, (byte)13, (byte)0 },
                    { 64, (byte)1, (byte)10 },
                    { 63, (byte)14, (byte)0 },
                    { 63, (byte)10, (byte)6 },
                    { 63, (byte)9, (byte)1 },
                    { 63, (byte)8, (byte)30 },
                    { 63, (byte)7, (byte)20 },
                    { 63, (byte)5, (byte)10 },
                    { 63, (byte)6, (byte)20 },
                    { 63, (byte)4, (byte)10 },
                    { 63, (byte)3, (byte)10 },
                    { 63, (byte)2, (byte)15 },
                    { 63, (byte)13, (byte)0 },
                    { 63, (byte)1, (byte)25 },
                    { 62, (byte)10, (byte)5 },
                    { 61, (byte)13, (byte)0 },
                    { 61, (byte)1, (byte)20 },
                    { 60, (byte)14, (byte)0 },
                    { 59, (byte)1, (byte)10 },
                    { 58, (byte)14, (byte)0 },
                    { 58, (byte)10, (byte)2 },
                    { 58, (byte)9, (byte)1 },
                    { 58, (byte)8, (byte)0 },
                    { 58, (byte)7, (byte)0 },
                    { 58, (byte)5, (byte)10 },
                    { 58, (byte)6, (byte)0 },
                    { 58, (byte)4, (byte)0 },
                    { 58, (byte)3, (byte)10 },
                    { 58, (byte)2, (byte)5 },
                    { 58, (byte)13, (byte)0 },
                    { 58, (byte)1, (byte)10 },
                    { 57, (byte)14, (byte)0 },
                    { 57, (byte)10, (byte)2 },
                    { 57, (byte)9, (byte)0 },
                    { 57, (byte)8, (byte)10 },
                    { 59, (byte)13, (byte)0 },
                    { 59, (byte)2, (byte)10 },
                    { 59, (byte)3, (byte)0 },
                    { 59, (byte)4, (byte)0 },
                    { 60, (byte)10, (byte)3 },
                    { 60, (byte)9, (byte)1 },
                    { 60, (byte)8, (byte)0 },
                    { 60, (byte)7, (byte)5 },
                    { 60, (byte)5, (byte)5 },
                    { 60, (byte)6, (byte)0 },
                    { 60, (byte)4, (byte)0 },
                    { 60, (byte)3, (byte)10 },
                    { 64, (byte)6, (byte)10 },
                    { 60, (byte)2, (byte)10 },
                    { 60, (byte)1, (byte)10 },
                    { 59, (byte)14, (byte)0 },
                    { 59, (byte)10, (byte)2 },
                    { 59, (byte)9, (byte)1 },
                    { 59, (byte)8, (byte)0 },
                    { 59, (byte)7, (byte)5 },
                    { 59, (byte)5, (byte)10 },
                    { 59, (byte)6, (byte)0 },
                    { 60, (byte)13, (byte)0 },
                    { 85, (byte)7, (byte)35 },
                    { 64, (byte)5, (byte)15 },
                    { 64, (byte)8, (byte)25 },
                    { 69, (byte)8, (byte)0 },
                    { 69, (byte)7, (byte)20 },
                    { 69, (byte)5, (byte)30 },
                    { 69, (byte)6, (byte)0 },
                    { 69, (byte)4, (byte)25 },
                    { 69, (byte)3, (byte)25 },
                    { 69, (byte)2, (byte)40 },
                    { 69, (byte)13, (byte)0 },
                    { 69, (byte)1, (byte)40 },
                    { 68, (byte)14, (byte)0 },
                    { 68, (byte)10, (byte)4 },
                    { 68, (byte)9, (byte)0 },
                    { 68, (byte)8, (byte)20 },
                    { 68, (byte)7, (byte)20 },
                    { 68, (byte)5, (byte)10 },
                    { 68, (byte)6, (byte)20 },
                    { 68, (byte)4, (byte)0 },
                    { 69, (byte)9, (byte)2 },
                    { 68, (byte)3, (byte)0 },
                    { 69, (byte)10, (byte)8 },
                    { 70, (byte)1, (byte)10 },
                    { 71, (byte)6, (byte)10 },
                    { 71, (byte)4, (byte)20 },
                    { 71, (byte)3, (byte)10 },
                    { 71, (byte)2, (byte)30 },
                    { 71, (byte)13, (byte)0 },
                    { 71, (byte)1, (byte)20 },
                    { 70, (byte)14, (byte)0 },
                    { 70, (byte)10, (byte)4 },
                    { 70, (byte)9, (byte)0 },
                    { 70, (byte)8, (byte)20 },
                    { 70, (byte)7, (byte)10 },
                    { 70, (byte)5, (byte)15 },
                    { 70, (byte)6, (byte)15 },
                    { 70, (byte)4, (byte)5 },
                    { 70, (byte)3, (byte)5 },
                    { 70, (byte)2, (byte)10 },
                    { 70, (byte)13, (byte)0 },
                    { 69, (byte)14, (byte)0 },
                    { 68, (byte)2, (byte)5 },
                    { 68, (byte)13, (byte)0 },
                    { 68, (byte)1, (byte)5 },
                    { 66, (byte)13, (byte)0 },
                    { 66, (byte)1, (byte)15 },
                    { 65, (byte)14, (byte)0 },
                    { 65, (byte)10, (byte)6 },
                    { 65, (byte)9, (byte)1 },
                    { 65, (byte)8, (byte)10 },
                    { 65, (byte)7, (byte)20 },
                    { 65, (byte)5, (byte)5 },
                    { 65, (byte)6, (byte)0 },
                    { 65, (byte)4, (byte)15 },
                    { 65, (byte)3, (byte)10 },
                    { 65, (byte)2, (byte)0 },
                    { 65, (byte)13, (byte)0 },
                    { 65, (byte)1, (byte)15 },
                    { 64, (byte)14, (byte)0 },
                    { 64, (byte)10, (byte)4 },
                    { 64, (byte)9, (byte)0 },
                    { 66, (byte)2, (byte)15 },
                    { 66, (byte)3, (byte)10 },
                    { 66, (byte)4, (byte)15 },
                    { 66, (byte)6, (byte)10 },
                    { 67, (byte)14, (byte)0 },
                    { 67, (byte)10, (byte)4 },
                    { 67, (byte)9, (byte)1 },
                    { 67, (byte)8, (byte)30 },
                    { 67, (byte)7, (byte)15 },
                    { 67, (byte)5, (byte)15 },
                    { 67, (byte)6, (byte)20 },
                    { 67, (byte)4, (byte)10 },
                    { 64, (byte)7, (byte)5 },
                    { 67, (byte)3, (byte)0 },
                    { 67, (byte)13, (byte)0 },
                    { 67, (byte)1, (byte)10 },
                    { 66, (byte)14, (byte)0 },
                    { 66, (byte)10, (byte)4 },
                    { 66, (byte)9, (byte)1 },
                    { 66, (byte)8, (byte)10 },
                    { 66, (byte)7, (byte)10 },
                    { 66, (byte)5, (byte)10 },
                    { 67, (byte)2, (byte)10 },
                    { 57, (byte)7, (byte)5 },
                    { 85, (byte)8, (byte)15 },
                    { 85, (byte)10, (byte)4 },
                    { 104, (byte)14, (byte)0 },
                    { 104, (byte)10, (byte)4 },
                    { 104, (byte)9, (byte)0 },
                    { 104, (byte)8, (byte)20 },
                    { 104, (byte)7, (byte)10 },
                    { 104, (byte)5, (byte)0 },
                    { 104, (byte)6, (byte)20 },
                    { 104, (byte)4, (byte)10 },
                    { 104, (byte)3, (byte)5 },
                    { 104, (byte)2, (byte)5 },
                    { 104, (byte)13, (byte)0 },
                    { 104, (byte)1, (byte)5 },
                    { 103, (byte)14, (byte)0 },
                    { 103, (byte)10, (byte)4 },
                    { 103, (byte)9, (byte)0 },
                    { 103, (byte)8, (byte)15 },
                    { 103, (byte)7, (byte)15 },
                    { 105, (byte)1, (byte)20 },
                    { 103, (byte)5, (byte)10 },
                    { 105, (byte)13, (byte)0 },
                    { 105, (byte)3, (byte)10 },
                    { 106, (byte)8, (byte)10 },
                    { 106, (byte)7, (byte)25 },
                    { 106, (byte)5, (byte)10 },
                    { 106, (byte)6, (byte)20 },
                    { 106, (byte)4, (byte)5 },
                    { 106, (byte)3, (byte)0 },
                    { 106, (byte)2, (byte)5 },
                    { 106, (byte)13, (byte)0 },
                    { 106, (byte)1, (byte)5 },
                    { 105, (byte)14, (byte)0 },
                    { 105, (byte)10, (byte)6 },
                    { 105, (byte)9, (byte)1 },
                    { 105, (byte)8, (byte)0 },
                    { 105, (byte)7, (byte)15 },
                    { 105, (byte)5, (byte)15 },
                    { 105, (byte)6, (byte)0 },
                    { 105, (byte)4, (byte)10 },
                    { 105, (byte)2, (byte)20 },
                    { 106, (byte)9, (byte)0 },
                    { 103, (byte)6, (byte)30 },
                    { 103, (byte)3, (byte)5 },
                    { 101, (byte)6, (byte)15 },
                    { 101, (byte)4, (byte)10 },
                    { 101, (byte)3, (byte)5 },
                    { 101, (byte)2, (byte)10 },
                    { 101, (byte)13, (byte)0 },
                    { 101, (byte)1, (byte)10 },
                    { 100, (byte)14, (byte)0 },
                    { 100, (byte)10, (byte)6 },
                    { 100, (byte)9, (byte)2 },
                    { 100, (byte)8, (byte)0 },
                    { 100, (byte)7, (byte)15 },
                    { 100, (byte)5, (byte)20 },
                    { 100, (byte)6, (byte)10 },
                    { 100, (byte)4, (byte)15 },
                    { 100, (byte)3, (byte)15 },
                    { 100, (byte)2, (byte)0 },
                    { 100, (byte)13, (byte)0 },
                    { 101, (byte)5, (byte)15 },
                    { 103, (byte)4, (byte)5 },
                    { 101, (byte)7, (byte)15 },
                    { 101, (byte)9, (byte)0 },
                    { 103, (byte)2, (byte)5 },
                    { 103, (byte)13, (byte)0 },
                    { 103, (byte)1, (byte)5 },
                    { 102, (byte)14, (byte)0 },
                    { 102, (byte)10, (byte)4 },
                    { 102, (byte)9, (byte)1 },
                    { 102, (byte)8, (byte)20 },
                    { 102, (byte)7, (byte)35 },
                    { 102, (byte)5, (byte)20 },
                    { 102, (byte)6, (byte)20 },
                    { 102, (byte)4, (byte)10 },
                    { 102, (byte)3, (byte)5 },
                    { 102, (byte)2, (byte)15 },
                    { 102, (byte)13, (byte)0 },
                    { 102, (byte)1, (byte)15 },
                    { 101, (byte)14, (byte)0 },
                    { 101, (byte)10, (byte)4 },
                    { 101, (byte)8, (byte)25 },
                    { 106, (byte)10, (byte)3 },
                    { 106, (byte)14, (byte)2 },
                    { 107, (byte)1, (byte)10 },
                    { 112, (byte)1, (byte)20 },
                    { 111, (byte)14, (byte)0 },
                    { 111, (byte)10, (byte)4 },
                    { 111, (byte)9, (byte)0 },
                    { 111, (byte)8, (byte)15 },
                    { 111, (byte)7, (byte)15 },
                    { 111, (byte)5, (byte)0 },
                    { 111, (byte)6, (byte)15 },
                    { 111, (byte)4, (byte)10 },
                    { 111, (byte)3, (byte)5 },
                    { 111, (byte)2, (byte)0 },
                    { 111, (byte)13, (byte)0 },
                    { 111, (byte)1, (byte)10 },
                    { 110, (byte)14, (byte)0 },
                    { 110, (byte)10, (byte)6 },
                    { 110, (byte)9, (byte)1 },
                    { 110, (byte)8, (byte)0 },
                    { 112, (byte)13, (byte)0 },
                    { 110, (byte)7, (byte)20 },
                    { 112, (byte)2, (byte)20 },
                    { 112, (byte)4, (byte)20 },
                    { 113, (byte)9, (byte)1 },
                    { 113, (byte)8, (byte)0 },
                    { 113, (byte)7, (byte)15 },
                    { 113, (byte)5, (byte)15 },
                    { 113, (byte)6, (byte)20 },
                    { 113, (byte)4, (byte)10 },
                    { 113, (byte)3, (byte)10 },
                    { 113, (byte)2, (byte)20 },
                    { 113, (byte)13, (byte)0 },
                    { 113, (byte)1, (byte)20 },
                    { 112, (byte)14, (byte)0 },
                    { 112, (byte)10, (byte)4 },
                    { 112, (byte)9, (byte)1 },
                    { 112, (byte)8, (byte)10 },
                    { 112, (byte)7, (byte)15 },
                    { 112, (byte)5, (byte)20 },
                    { 112, (byte)6, (byte)15 },
                    { 112, (byte)3, (byte)10 },
                    { 110, (byte)5, (byte)10 },
                    { 110, (byte)6, (byte)0 },
                    { 110, (byte)4, (byte)15 },
                    { 108, (byte)6, (byte)15 },
                    { 108, (byte)4, (byte)10 },
                    { 108, (byte)3, (byte)10 },
                    { 108, (byte)2, (byte)15 },
                    { 108, (byte)13, (byte)0 },
                    { 108, (byte)1, (byte)15 },
                    { 107, (byte)14, (byte)0 },
                    { 107, (byte)10, (byte)4 },
                    { 107, (byte)9, (byte)0 },
                    { 107, (byte)8, (byte)0 },
                    { 107, (byte)7, (byte)10 },
                    { 107, (byte)5, (byte)25 },
                    { 107, (byte)6, (byte)10 },
                    { 107, (byte)4, (byte)5 },
                    { 107, (byte)3, (byte)5 },
                    { 107, (byte)2, (byte)10 },
                    { 107, (byte)13, (byte)0 },
                    { 108, (byte)5, (byte)10 },
                    { 108, (byte)7, (byte)25 },
                    { 108, (byte)8, (byte)20 },
                    { 108, (byte)9, (byte)1 },
                    { 110, (byte)3, (byte)15 },
                    { 110, (byte)2, (byte)0 },
                    { 110, (byte)13, (byte)0 },
                    { 110, (byte)1, (byte)25 },
                    { 109, (byte)14, (byte)0 },
                    { 109, (byte)10, (byte)8 },
                    { 109, (byte)9, (byte)2 },
                    { 109, (byte)8, (byte)0 },
                    { 100, (byte)1, (byte)35 },
                    { 109, (byte)7, (byte)30 },
                    { 109, (byte)6, (byte)0 },
                    { 109, (byte)4, (byte)30 },
                    { 109, (byte)3, (byte)30 },
                    { 109, (byte)2, (byte)0 },
                    { 109, (byte)13, (byte)0 },
                    { 109, (byte)1, (byte)40 },
                    { 108, (byte)14, (byte)2 },
                    { 108, (byte)10, (byte)5 },
                    { 109, (byte)5, (byte)20 },
                    { 99, (byte)14, (byte)0 },
                    { 99, (byte)10, (byte)4 },
                    { 99, (byte)9, (byte)1 },
                    { 90, (byte)10, (byte)7 },
                    { 90, (byte)9, (byte)2 },
                    { 90, (byte)8, (byte)25 },
                    { 90, (byte)7, (byte)15 },
                    { 90, (byte)5, (byte)20 },
                    { 90, (byte)6, (byte)15 },
                    { 90, (byte)4, (byte)20 },
                    { 90, (byte)3, (byte)20 },
                    { 90, (byte)2, (byte)20 },
                    { 90, (byte)13, (byte)0 },
                    { 90, (byte)1, (byte)30 },
                    { 89, (byte)14, (byte)0 },
                    { 89, (byte)10, (byte)6 },
                    { 89, (byte)9, (byte)1 },
                    { 89, (byte)8, (byte)15 },
                    { 89, (byte)7, (byte)20 },
                    { 89, (byte)5, (byte)15 },
                    { 90, (byte)14, (byte)0 },
                    { 89, (byte)6, (byte)25 },
                    { 91, (byte)1, (byte)15 },
                    { 91, (byte)2, (byte)0 },
                    { 92, (byte)7, (byte)10 },
                    { 92, (byte)5, (byte)10 },
                    { 92, (byte)6, (byte)5 },
                    { 92, (byte)4, (byte)5 },
                    { 92, (byte)3, (byte)10 },
                    { 92, (byte)2, (byte)10 },
                    { 92, (byte)13, (byte)0 },
                    { 92, (byte)1, (byte)15 },
                    { 91, (byte)14, (byte)0 },
                    { 91, (byte)10, (byte)4 },
                    { 91, (byte)9, (byte)0 },
                    { 91, (byte)8, (byte)15 },
                    { 91, (byte)7, (byte)20 },
                    { 91, (byte)5, (byte)10 },
                    { 91, (byte)6, (byte)10 },
                    { 91, (byte)4, (byte)10 },
                    { 91, (byte)3, (byte)20 },
                    { 91, (byte)13, (byte)0 },
                    { 89, (byte)4, (byte)15 },
                    { 89, (byte)3, (byte)10 },
                    { 89, (byte)2, (byte)20 },
                    { 87, (byte)3, (byte)20 },
                    { 87, (byte)2, (byte)10 },
                    { 87, (byte)13, (byte)0 },
                    { 87, (byte)1, (byte)35 },
                    { 86, (byte)14, (byte)0 },
                    { 86, (byte)10, (byte)3 },
                    { 86, (byte)9, (byte)0 },
                    { 86, (byte)8, (byte)10 },
                    { 86, (byte)7, (byte)10 },
                    { 86, (byte)5, (byte)20 },
                    { 86, (byte)6, (byte)10 },
                    { 86, (byte)4, (byte)10 },
                    { 86, (byte)3, (byte)10 },
                    { 86, (byte)2, (byte)0 },
                    { 86, (byte)13, (byte)0 },
                    { 86, (byte)1, (byte)0 },
                    { 85, (byte)14, (byte)3 },
                    { 87, (byte)4, (byte)20 },
                    { 87, (byte)6, (byte)15 },
                    { 87, (byte)5, (byte)20 },
                    { 87, (byte)7, (byte)25 },
                    { 89, (byte)13, (byte)0 },
                    { 89, (byte)1, (byte)20 },
                    { 88, (byte)14, (byte)0 },
                    { 88, (byte)10, (byte)4 },
                    { 88, (byte)9, (byte)0 },
                    { 88, (byte)8, (byte)0 },
                    { 88, (byte)7, (byte)10 },
                    { 88, (byte)5, (byte)10 },
                    { 92, (byte)8, (byte)10 },
                    { 88, (byte)6, (byte)25 },
                    { 88, (byte)3, (byte)5 },
                    { 88, (byte)2, (byte)10 },
                    { 88, (byte)13, (byte)0 },
                    { 88, (byte)1, (byte)10 },
                    { 87, (byte)14, (byte)0 },
                    { 87, (byte)10, (byte)8 },
                    { 87, (byte)9, (byte)2 },
                    { 87, (byte)8, (byte)15 },
                    { 88, (byte)4, (byte)5 },
                    { 85, (byte)9, (byte)0 },
                    { 92, (byte)9, (byte)1 },
                    { 92, (byte)14, (byte)0 },
                    { 97, (byte)14, (byte)0 },
                    { 97, (byte)10, (byte)4 },
                    { 97, (byte)9, (byte)1 },
                    { 97, (byte)8, (byte)20 },
                    { 97, (byte)7, (byte)10 },
                    { 97, (byte)5, (byte)10 },
                    { 97, (byte)6, (byte)10 },
                    { 97, (byte)4, (byte)10 },
                    { 97, (byte)3, (byte)10 },
                    { 97, (byte)2, (byte)15 },
                    { 97, (byte)13, (byte)0 },
                    { 97, (byte)1, (byte)20 },
                    { 96, (byte)14, (byte)0 },
                    { 96, (byte)10, (byte)4 },
                    { 96, (byte)9, (byte)1 },
                    { 96, (byte)8, (byte)5 },
                    { 96, (byte)7, (byte)15 },
                    { 98, (byte)1, (byte)25 },
                    { 96, (byte)5, (byte)15 },
                    { 98, (byte)13, (byte)0 },
                    { 98, (byte)3, (byte)10 },
                    { 99, (byte)8, (byte)15 },
                    { 99, (byte)7, (byte)20 },
                    { 99, (byte)5, (byte)25 },
                    { 99, (byte)6, (byte)10 },
                    { 99, (byte)4, (byte)10 },
                    { 99, (byte)3, (byte)10 },
                    { 99, (byte)2, (byte)35 },
                    { 99, (byte)13, (byte)0 },
                    { 99, (byte)1, (byte)0 },
                    { 98, (byte)14, (byte)0 },
                    { 98, (byte)10, (byte)4 },
                    { 98, (byte)9, (byte)2 },
                    { 98, (byte)8, (byte)20 },
                    { 98, (byte)7, (byte)10 },
                    { 98, (byte)5, (byte)30 },
                    { 98, (byte)6, (byte)20 },
                    { 98, (byte)4, (byte)10 },
                    { 98, (byte)2, (byte)25 },
                    { 96, (byte)6, (byte)5 },
                    { 96, (byte)4, (byte)15 },
                    { 96, (byte)3, (byte)15 },
                    { 94, (byte)4, (byte)10 },
                    { 94, (byte)3, (byte)15 },
                    { 94, (byte)2, (byte)15 },
                    { 94, (byte)13, (byte)0 },
                    { 94, (byte)1, (byte)20 },
                    { 93, (byte)14, (byte)0 },
                    { 93, (byte)10, (byte)4 },
                    { 93, (byte)9, (byte)1 },
                    { 93, (byte)8, (byte)15 },
                    { 93, (byte)7, (byte)15 },
                    { 93, (byte)5, (byte)15 },
                    { 93, (byte)6, (byte)0 },
                    { 93, (byte)4, (byte)10 },
                    { 93, (byte)3, (byte)10 },
                    { 93, (byte)2, (byte)20 },
                    { 93, (byte)13, (byte)0 },
                    { 93, (byte)1, (byte)20 },
                    { 94, (byte)6, (byte)0 },
                    { 94, (byte)5, (byte)10 },
                    { 94, (byte)7, (byte)15 },
                    { 94, (byte)8, (byte)10 },
                    { 96, (byte)2, (byte)0 },
                    { 96, (byte)13, (byte)0 },
                    { 96, (byte)1, (byte)25 },
                    { 95, (byte)14, (byte)0 },
                    { 95, (byte)10, (byte)4 },
                    { 95, (byte)9, (byte)1 },
                    { 95, (byte)8, (byte)25 },
                    { 95, (byte)7, (byte)15 },
                    { 92, (byte)10, (byte)4 },
                    { 95, (byte)5, (byte)30 },
                    { 95, (byte)4, (byte)10 },
                    { 95, (byte)3, (byte)10 },
                    { 95, (byte)2, (byte)20 },
                    { 95, (byte)13, (byte)0 },
                    { 95, (byte)1, (byte)20 },
                    { 94, (byte)14, (byte)0 },
                    { 94, (byte)10, (byte)5 },
                    { 94, (byte)9, (byte)1 },
                    { 95, (byte)6, (byte)20 },
                    { 57, (byte)5, (byte)10 },
                    { 57, (byte)6, (byte)10 },
                    { 57, (byte)4, (byte)0 },
                    { 20, (byte)13, (byte)0 },
                    { 20, (byte)1, (byte)5 },
                    { 19, (byte)14, (byte)0 },
                    { 19, (byte)10, (byte)3 },
                    { 19, (byte)9, (byte)0 },
                    { 19, (byte)8, (byte)0 },
                    { 19, (byte)7, (byte)0 },
                    { 19, (byte)5, (byte)10 },
                    { 19, (byte)6, (byte)5 },
                    { 19, (byte)4, (byte)5 },
                    { 19, (byte)3, (byte)0 },
                    { 19, (byte)2, (byte)15 },
                    { 19, (byte)13, (byte)0 },
                    { 19, (byte)1, (byte)0 },
                    { 18, (byte)14, (byte)0 },
                    { 18, (byte)10, (byte)3 },
                    { 18, (byte)9, (byte)0 },
                    { 20, (byte)2, (byte)10 },
                    { 18, (byte)8, (byte)0 },
                    { 20, (byte)3, (byte)5 }
                });

            migrationBuilder.InsertData(
                table: "ProfessionStatistic",
                columns: new[] { "ProfessionId", "StatisticId", "Value" },
                values: new object[,]
                {
                    { 20, (byte)6, (byte)0 },
                    { 21, (byte)10, (byte)2 },
                    { 21, (byte)9, (byte)0 },
                    { 21, (byte)8, (byte)5 },
                    { 21, (byte)7, (byte)5 },
                    { 21, (byte)5, (byte)5 },
                    { 21, (byte)6, (byte)10 },
                    { 21, (byte)4, (byte)0 },
                    { 21, (byte)3, (byte)0 },
                    { 21, (byte)2, (byte)0 },
                    { 21, (byte)13, (byte)0 },
                    { 21, (byte)1, (byte)5 },
                    { 20, (byte)14, (byte)0 },
                    { 20, (byte)10, (byte)2 },
                    { 20, (byte)9, (byte)0 },
                    { 20, (byte)8, (byte)0 },
                    { 20, (byte)7, (byte)5 },
                    { 20, (byte)5, (byte)10 },
                    { 20, (byte)4, (byte)0 },
                    { 21, (byte)14, (byte)0 },
                    { 18, (byte)7, (byte)10 },
                    { 18, (byte)6, (byte)0 },
                    { 16, (byte)7, (byte)5 },
                    { 16, (byte)5, (byte)10 },
                    { 16, (byte)6, (byte)5 },
                    { 16, (byte)4, (byte)0 },
                    { 16, (byte)3, (byte)0 },
                    { 16, (byte)2, (byte)5 },
                    { 16, (byte)13, (byte)0 },
                    { 16, (byte)1, (byte)5 },
                    { 15, (byte)14, (byte)0 },
                    { 15, (byte)10, (byte)2 },
                    { 15, (byte)9, (byte)0 },
                    { 15, (byte)8, (byte)5 },
                    { 15, (byte)7, (byte)10 },
                    { 15, (byte)5, (byte)10 },
                    { 15, (byte)6, (byte)10 },
                    { 15, (byte)4, (byte)0 },
                    { 15, (byte)3, (byte)0 },
                    { 16, (byte)8, (byte)10 },
                    { 18, (byte)5, (byte)5 },
                    { 16, (byte)9, (byte)0 },
                    { 16, (byte)14, (byte)0 },
                    { 18, (byte)4, (byte)0 },
                    { 18, (byte)3, (byte)10 },
                    { 18, (byte)2, (byte)0 },
                    { 18, (byte)13, (byte)0 },
                    { 18, (byte)1, (byte)10 },
                    { 17, (byte)14, (byte)0 },
                    { 17, (byte)10, (byte)2 },
                    { 17, (byte)9, (byte)0 },
                    { 17, (byte)8, (byte)0 },
                    { 17, (byte)7, (byte)10 },
                    { 17, (byte)5, (byte)0 },
                    { 17, (byte)6, (byte)0 },
                    { 17, (byte)4, (byte)10 },
                    { 17, (byte)3, (byte)0 },
                    { 17, (byte)2, (byte)10 },
                    { 17, (byte)13, (byte)0 },
                    { 17, (byte)1, (byte)10 },
                    { 16, (byte)10, (byte)2 },
                    { 22, (byte)1, (byte)10 },
                    { 22, (byte)13, (byte)0 },
                    { 22, (byte)2, (byte)5 },
                    { 27, (byte)2, (byte)0 },
                    { 27, (byte)13, (byte)0 },
                    { 27, (byte)1, (byte)0 },
                    { 26, (byte)14, (byte)0 },
                    { 26, (byte)10, (byte)2 },
                    { 26, (byte)9, (byte)1 },
                    { 26, (byte)8, (byte)5 },
                    { 26, (byte)7, (byte)5 },
                    { 26, (byte)5, (byte)0 },
                    { 26, (byte)6, (byte)0 },
                    { 26, (byte)4, (byte)5 },
                    { 26, (byte)3, (byte)5 },
                    { 26, (byte)2, (byte)0 },
                    { 26, (byte)13, (byte)0 },
                    { 26, (byte)1, (byte)10 },
                    { 25, (byte)14, (byte)0 },
                    { 25, (byte)10, (byte)3 },
                    { 27, (byte)3, (byte)0 },
                    { 25, (byte)9, (byte)1 },
                    { 27, (byte)4, (byte)0 },
                    { 27, (byte)5, (byte)10 },
                    { 28, (byte)14, (byte)0 },
                    { 28, (byte)10, (byte)2 },
                    { 28, (byte)9, (byte)0 },
                    { 28, (byte)8, (byte)10 },
                    { 28, (byte)7, (byte)0 },
                    { 28, (byte)5, (byte)5 },
                    { 28, (byte)6, (byte)10 },
                    { 28, (byte)4, (byte)0 },
                    { 28, (byte)3, (byte)0 },
                    { 28, (byte)2, (byte)5 },
                    { 28, (byte)13, (byte)0 },
                    { 28, (byte)1, (byte)5 },
                    { 27, (byte)14, (byte)0 },
                    { 27, (byte)10, (byte)2 },
                    { 27, (byte)9, (byte)0 },
                    { 27, (byte)8, (byte)10 },
                    { 27, (byte)7, (byte)5 },
                    { 27, (byte)6, (byte)10 },
                    { 25, (byte)8, (byte)0 },
                    { 25, (byte)7, (byte)0 },
                    { 25, (byte)5, (byte)5 },
                    { 23, (byte)7, (byte)5 },
                    { 23, (byte)5, (byte)5 },
                    { 23, (byte)6, (byte)0 },
                    { 23, (byte)4, (byte)5 },
                    { 23, (byte)3, (byte)5 },
                    { 23, (byte)2, (byte)10 },
                    { 23, (byte)13, (byte)0 },
                    { 23, (byte)1, (byte)10 },
                    { 22, (byte)14, (byte)0 },
                    { 22, (byte)10, (byte)2 },
                    { 22, (byte)9, (byte)0 },
                    { 22, (byte)8, (byte)0 },
                    { 22, (byte)7, (byte)5 },
                    { 22, (byte)5, (byte)5 },
                    { 22, (byte)6, (byte)0 },
                    { 22, (byte)4, (byte)10 },
                    { 22, (byte)3, (byte)5 },
                    { 23, (byte)8, (byte)0 },
                    { 23, (byte)9, (byte)1 },
                    { 23, (byte)10, (byte)2 },
                    { 23, (byte)14, (byte)0 },
                    { 25, (byte)6, (byte)0 },
                    { 25, (byte)4, (byte)5 },
                    { 25, (byte)3, (byte)5 },
                    { 25, (byte)2, (byte)0 },
                    { 25, (byte)13, (byte)0 },
                    { 25, (byte)1, (byte)10 },
                    { 24, (byte)14, (byte)0 },
                    { 24, (byte)10, (byte)2 },
                    { 15, (byte)2, (byte)0 },
                    { 24, (byte)9, (byte)0 },
                    { 24, (byte)7, (byte)0 },
                    { 24, (byte)5, (byte)10 },
                    { 24, (byte)6, (byte)0 },
                    { 24, (byte)4, (byte)5 },
                    { 24, (byte)3, (byte)5 },
                    { 24, (byte)2, (byte)5 },
                    { 24, (byte)13, (byte)0 },
                    { 24, (byte)1, (byte)10 },
                    { 24, (byte)8, (byte)0 },
                    { 15, (byte)13, (byte)0 },
                    { 15, (byte)1, (byte)10 },
                    { 14, (byte)14, (byte)1 },
                    { 6, (byte)1, (byte)5 },
                    { 5, (byte)14, (byte)0 },
                    { 5, (byte)10, (byte)2 },
                    { 5, (byte)9, (byte)0 },
                    { 5, (byte)8, (byte)10 },
                    { 5, (byte)7, (byte)5 },
                    { 5, (byte)5, (byte)10 },
                    { 5, (byte)6, (byte)5 },
                    { 5, (byte)4, (byte)5 },
                    { 5, (byte)3, (byte)0 },
                    { 5, (byte)2, (byte)0 },
                    { 5, (byte)13, (byte)0 },
                    { 5, (byte)1, (byte)0 },
                    { 4, (byte)14, (byte)0 },
                    { 4, (byte)10, (byte)2 },
                    { 4, (byte)9, (byte)0 },
                    { 4, (byte)8, (byte)0 },
                    { 6, (byte)13, (byte)0 },
                    { 4, (byte)7, (byte)5 },
                    { 6, (byte)2, (byte)10 },
                    { 6, (byte)4, (byte)0 },
                    { 7, (byte)9, (byte)0 },
                    { 7, (byte)8, (byte)5 },
                    { 7, (byte)7, (byte)10 },
                    { 7, (byte)5, (byte)10 },
                    { 7, (byte)6, (byte)10 },
                    { 7, (byte)4, (byte)0 },
                    { 7, (byte)3, (byte)0 },
                    { 7, (byte)2, (byte)0 },
                    { 7, (byte)13, (byte)0 },
                    { 7, (byte)1, (byte)5 },
                    { 6, (byte)14, (byte)0 },
                    { 6, (byte)10, (byte)2 },
                    { 6, (byte)9, (byte)0 },
                    { 6, (byte)8, (byte)10 },
                    { 6, (byte)7, (byte)5 },
                    { 6, (byte)5, (byte)10 },
                    { 6, (byte)6, (byte)0 },
                    { 6, (byte)3, (byte)0 },
                    { 4, (byte)5, (byte)5 },
                    { 4, (byte)6, (byte)0 },
                    { 4, (byte)4, (byte)10 },
                    { 2, (byte)6, (byte)5 },
                    { 2, (byte)4, (byte)0 },
                    { 2, (byte)3, (byte)0 },
                    { 2, (byte)2, (byte)10 },
                    { 2, (byte)13, (byte)0 },
                    { 2, (byte)1, (byte)10 },
                    { 1, (byte)14, (byte)0 },
                    { 1, (byte)10, (byte)2 },
                    { 1, (byte)9, (byte)0 },
                    { 1, (byte)8, (byte)10 },
                    { 1, (byte)7, (byte)10 },
                    { 1, (byte)5, (byte)0 },
                    { 1, (byte)6, (byte)10 },
                    { 1, (byte)4, (byte)5 },
                    { 1, (byte)3, (byte)0 },
                    { 1, (byte)2, (byte)5 },
                    { 1, (byte)13, (byte)0 },
                    { 2, (byte)5, (byte)10 },
                    { 2, (byte)7, (byte)0 },
                    { 2, (byte)8, (byte)0 },
                    { 2, (byte)9, (byte)1 },
                    { 4, (byte)3, (byte)5 },
                    { 4, (byte)2, (byte)5 },
                    { 4, (byte)13, (byte)0 },
                    { 4, (byte)1, (byte)5 },
                    { 3, (byte)14, (byte)0 },
                    { 3, (byte)10, (byte)2 },
                    { 3, (byte)9, (byte)0 },
                    { 3, (byte)8, (byte)0 },
                    { 7, (byte)10, (byte)2 },
                    { 3, (byte)7, (byte)10 },
                    { 3, (byte)6, (byte)0 },
                    { 3, (byte)4, (byte)10 },
                    { 3, (byte)3, (byte)10 },
                    { 3, (byte)2, (byte)0 },
                    { 3, (byte)13, (byte)0 },
                    { 3, (byte)1, (byte)15 },
                    { 2, (byte)14, (byte)0 },
                    { 2, (byte)10, (byte)2 },
                    { 3, (byte)5, (byte)0 },
                    { 29, (byte)1, (byte)5 },
                    { 7, (byte)14, (byte)0 },
                    { 8, (byte)13, (byte)0 },
                    { 13, (byte)13, (byte)0 },
                    { 13, (byte)1, (byte)5 },
                    { 12, (byte)14, (byte)0 },
                    { 12, (byte)10, (byte)2 },
                    { 12, (byte)9, (byte)0 },
                    { 12, (byte)8, (byte)0 },
                    { 12, (byte)7, (byte)5 },
                    { 12, (byte)5, (byte)10 },
                    { 12, (byte)6, (byte)5 },
                    { 12, (byte)4, (byte)5 },
                    { 12, (byte)3, (byte)5 },
                    { 12, (byte)2, (byte)0 },
                    { 12, (byte)13, (byte)1 },
                    { 12, (byte)1, (byte)10 },
                    { 11, (byte)14, (byte)0 },
                    { 11, (byte)10, (byte)2 },
                    { 11, (byte)9, (byte)0 },
                    { 13, (byte)2, (byte)5 },
                    { 11, (byte)8, (byte)0 },
                    { 13, (byte)3, (byte)10 },
                    { 13, (byte)6, (byte)5 },
                    { 14, (byte)10, (byte)2 },
                    { 14, (byte)9, (byte)0 },
                    { 14, (byte)8, (byte)10 },
                    { 14, (byte)7, (byte)10 },
                    { 14, (byte)5, (byte)5 },
                    { 14, (byte)6, (byte)5 },
                    { 14, (byte)4, (byte)5 },
                    { 14, (byte)3, (byte)0 },
                    { 14, (byte)2, (byte)0 },
                    { 14, (byte)13, (byte)0 },
                    { 14, (byte)1, (byte)0 },
                    { 13, (byte)14, (byte)0 },
                    { 13, (byte)10, (byte)2 },
                    { 13, (byte)9, (byte)0 },
                    { 13, (byte)8, (byte)0 },
                    { 13, (byte)7, (byte)5 },
                    { 13, (byte)5, (byte)0 },
                    { 13, (byte)4, (byte)5 },
                    { 11, (byte)7, (byte)10 },
                    { 11, (byte)5, (byte)10 },
                    { 11, (byte)6, (byte)0 },
                    { 9, (byte)5, (byte)10 },
                    { 9, (byte)6, (byte)5 },
                    { 9, (byte)4, (byte)5 },
                    { 9, (byte)3, (byte)5 },
                    { 9, (byte)2, (byte)5 },
                    { 9, (byte)13, (byte)0 },
                    { 9, (byte)1, (byte)10 },
                    { 8, (byte)14, (byte)0 },
                    { 8, (byte)10, (byte)2 },
                    { 8, (byte)9, (byte)0 },
                    { 8, (byte)8, (byte)5 },
                    { 8, (byte)7, (byte)10 },
                    { 8, (byte)5, (byte)0 },
                    { 8, (byte)6, (byte)0 },
                    { 8, (byte)4, (byte)10 },
                    { 8, (byte)3, (byte)5 },
                    { 8, (byte)2, (byte)0 },
                    { 9, (byte)7, (byte)0 },
                    { 9, (byte)8, (byte)0 },
                    { 9, (byte)9, (byte)0 },
                    { 9, (byte)10, (byte)2 },
                    { 11, (byte)4, (byte)10 },
                    { 11, (byte)3, (byte)0 },
                    { 11, (byte)2, (byte)0 },
                    { 11, (byte)13, (byte)0 },
                    { 11, (byte)1, (byte)15 },
                    { 10, (byte)14, (byte)0 },
                    { 10, (byte)10, (byte)2 },
                    { 10, (byte)9, (byte)1 },
                    { 8, (byte)1, (byte)10 },
                    { 10, (byte)8, (byte)5 },
                    { 10, (byte)5, (byte)5 },
                    { 10, (byte)6, (byte)0 },
                    { 10, (byte)4, (byte)5 },
                    { 10, (byte)3, (byte)5 },
                    { 10, (byte)2, (byte)5 },
                    { 10, (byte)13, (byte)0 },
                    { 10, (byte)1, (byte)10 },
                    { 9, (byte)14, (byte)0 },
                    { 10, (byte)7, (byte)0 },
                    { 29, (byte)13, (byte)0 },
                    { 29, (byte)2, (byte)5 },
                    { 29, (byte)3, (byte)5 },
                    { 48, (byte)6, (byte)0 },
                    { 48, (byte)4, (byte)5 },
                    { 48, (byte)3, (byte)5 },
                    { 48, (byte)2, (byte)0 },
                    { 48, (byte)13, (byte)0 },
                    { 48, (byte)1, (byte)10 },
                    { 47, (byte)14, (byte)0 },
                    { 47, (byte)10, (byte)2 },
                    { 47, (byte)9, (byte)0 },
                    { 47, (byte)8, (byte)5 },
                    { 47, (byte)7, (byte)5 },
                    { 47, (byte)5, (byte)5 },
                    { 47, (byte)6, (byte)0 },
                    { 47, (byte)4, (byte)10 },
                    { 47, (byte)3, (byte)5 },
                    { 47, (byte)2, (byte)0 },
                    { 47, (byte)13, (byte)0 },
                    { 48, (byte)5, (byte)10 },
                    { 47, (byte)1, (byte)5 },
                    { 48, (byte)7, (byte)5 },
                    { 48, (byte)9, (byte)1 },
                    { 50, (byte)2, (byte)0 },
                    { 50, (byte)13, (byte)0 },
                    { 50, (byte)1, (byte)5 },
                    { 49, (byte)14, (byte)1 },
                    { 49, (byte)10, (byte)2 },
                    { 49, (byte)9, (byte)0 },
                    { 49, (byte)8, (byte)5 },
                    { 49, (byte)7, (byte)15 },
                    { 49, (byte)5, (byte)5 },
                    { 49, (byte)6, (byte)10 },
                    { 49, (byte)4, (byte)0 },
                    { 49, (byte)3, (byte)0 },
                    { 49, (byte)2, (byte)0 },
                    { 49, (byte)13, (byte)0 },
                    { 49, (byte)1, (byte)0 },
                    { 48, (byte)14, (byte)0 },
                    { 48, (byte)10, (byte)2 },
                    { 48, (byte)8, (byte)0 },
                    { 46, (byte)14, (byte)0 },
                    { 46, (byte)10, (byte)2 },
                    { 46, (byte)9, (byte)0 },
                    { 44, (byte)10, (byte)2 },
                    { 44, (byte)9, (byte)0 },
                    { 44, (byte)8, (byte)0 },
                    { 44, (byte)7, (byte)10 },
                    { 44, (byte)5, (byte)10 },
                    { 44, (byte)6, (byte)0 },
                    { 44, (byte)4, (byte)5 },
                    { 44, (byte)3, (byte)0 },
                    { 44, (byte)2, (byte)10 },
                    { 44, (byte)13, (byte)0 },
                    { 44, (byte)1, (byte)5 },
                    { 43, (byte)14, (byte)0 },
                    { 43, (byte)10, (byte)3 },
                    { 43, (byte)9, (byte)0 },
                    { 43, (byte)8, (byte)0 },
                    { 43, (byte)7, (byte)5 },
                    { 43, (byte)5, (byte)0 },
                    { 44, (byte)14, (byte)0 },
                    { 45, (byte)1, (byte)15 },
                    { 45, (byte)13, (byte)0 },
                    { 45, (byte)2, (byte)0 },
                    { 46, (byte)8, (byte)10 },
                    { 46, (byte)7, (byte)5 },
                    { 46, (byte)5, (byte)5 },
                    { 46, (byte)6, (byte)5 },
                    { 46, (byte)4, (byte)0 },
                    { 46, (byte)3, (byte)0 },
                    { 46, (byte)2, (byte)5 },
                    { 46, (byte)13, (byte)0 },
                    { 50, (byte)3, (byte)5 },
                    { 46, (byte)1, (byte)10 },
                    { 45, (byte)10, (byte)2 },
                    { 45, (byte)9, (byte)1 },
                    { 45, (byte)8, (byte)0 },
                    { 45, (byte)7, (byte)0 },
                    { 45, (byte)5, (byte)10 },
                    { 45, (byte)6, (byte)5 },
                    { 45, (byte)4, (byte)5 },
                    { 45, (byte)3, (byte)5 },
                    { 45, (byte)14, (byte)0 },
                    { 43, (byte)6, (byte)0 },
                    { 50, (byte)4, (byte)5 },
                    { 50, (byte)5, (byte)5 },
                    { 55, (byte)5, (byte)0 },
                    { 55, (byte)6, (byte)10 },
                    { 55, (byte)4, (byte)0 },
                    { 55, (byte)3, (byte)5 },
                    { 55, (byte)2, (byte)5 },
                    { 55, (byte)13, (byte)0 },
                    { 55, (byte)1, (byte)5 },
                    { 54, (byte)14, (byte)0 },
                    { 54, (byte)10, (byte)3 },
                    { 54, (byte)9, (byte)1 },
                    { 54, (byte)8, (byte)0 },
                    { 54, (byte)7, (byte)10 },
                    { 54, (byte)5, (byte)5 },
                    { 54, (byte)6, (byte)0 },
                    { 54, (byte)4, (byte)5 },
                    { 54, (byte)3, (byte)5 },
                    { 54, (byte)2, (byte)0 },
                    { 55, (byte)7, (byte)5 },
                    { 54, (byte)13, (byte)0 },
                    { 55, (byte)8, (byte)10 },
                    { 55, (byte)10, (byte)2 },
                    { 57, (byte)3, (byte)0 },
                    { 57, (byte)2, (byte)0 },
                    { 57, (byte)13, (byte)0 },
                    { 57, (byte)1, (byte)0 },
                    { 56, (byte)14, (byte)0 },
                    { 56, (byte)10, (byte)2 },
                    { 56, (byte)9, (byte)0 },
                    { 56, (byte)8, (byte)10 },
                    { 56, (byte)7, (byte)0 },
                    { 56, (byte)5, (byte)15 },
                    { 56, (byte)6, (byte)5 },
                    { 56, (byte)4, (byte)0 },
                    { 56, (byte)3, (byte)0 },
                    { 56, (byte)2, (byte)5 },
                    { 56, (byte)13, (byte)0 },
                    { 56, (byte)1, (byte)5 },
                    { 55, (byte)14, (byte)0 },
                    { 55, (byte)9, (byte)0 },
                    { 54, (byte)1, (byte)10 },
                    { 53, (byte)14, (byte)0 },
                    { 53, (byte)10, (byte)2 },
                    { 51, (byte)14, (byte)0 },
                    { 51, (byte)10, (byte)2 },
                    { 51, (byte)9, (byte)0 },
                    { 51, (byte)8, (byte)5 },
                    { 51, (byte)7, (byte)0 },
                    { 51, (byte)5, (byte)10 },
                    { 51, (byte)6, (byte)5 },
                    { 51, (byte)4, (byte)0 },
                    { 51, (byte)3, (byte)0 },
                    { 51, (byte)2, (byte)10 },
                    { 51, (byte)13, (byte)0 },
                    { 51, (byte)1, (byte)5 },
                    { 50, (byte)14, (byte)0 },
                    { 50, (byte)10, (byte)2 },
                    { 50, (byte)9, (byte)0 },
                    { 50, (byte)8, (byte)5 },
                    { 50, (byte)7, (byte)5 },
                    { 52, (byte)1, (byte)5 },
                    { 52, (byte)13, (byte)0 },
                    { 52, (byte)2, (byte)5 },
                    { 52, (byte)3, (byte)0 },
                    { 53, (byte)9, (byte)0 },
                    { 53, (byte)8, (byte)5 },
                    { 53, (byte)7, (byte)5 },
                    { 53, (byte)5, (byte)10 },
                    { 53, (byte)6, (byte)0 },
                    { 53, (byte)4, (byte)0 },
                    { 53, (byte)3, (byte)0 },
                    { 53, (byte)2, (byte)10 },
                    { 50, (byte)6, (byte)5 },
                    { 53, (byte)13, (byte)0 },
                    { 52, (byte)14, (byte)0 },
                    { 52, (byte)10, (byte)2 },
                    { 52, (byte)9, (byte)0 },
                    { 52, (byte)8, (byte)0 },
                    { 52, (byte)7, (byte)5 },
                    { 52, (byte)5, (byte)10 },
                    { 52, (byte)6, (byte)10 },
                    { 52, (byte)4, (byte)0 },
                    { 53, (byte)1, (byte)5 },
                    { 113, (byte)10, (byte)6 },
                    { 43, (byte)4, (byte)10 },
                    { 43, (byte)2, (byte)0 },
                    { 34, (byte)3, (byte)10 },
                    { 34, (byte)2, (byte)5 },
                    { 34, (byte)13, (byte)0 },
                    { 34, (byte)1, (byte)0 },
                    { 33, (byte)14, (byte)0 },
                    { 33, (byte)10, (byte)2 },
                    { 33, (byte)9, (byte)0 },
                    { 33, (byte)8, (byte)0 },
                    { 33, (byte)7, (byte)0 },
                    { 33, (byte)5, (byte)5 },
                    { 33, (byte)6, (byte)5 },
                    { 33, (byte)4, (byte)5 },
                    { 33, (byte)3, (byte)10 },
                    { 33, (byte)2, (byte)5 },
                    { 33, (byte)13, (byte)0 },
                    { 33, (byte)1, (byte)5 },
                    { 32, (byte)14, (byte)0 },
                    { 34, (byte)4, (byte)5 },
                    { 32, (byte)10, (byte)2 },
                    { 34, (byte)6, (byte)5 },
                    { 34, (byte)7, (byte)0 },
                    { 36, (byte)1, (byte)0 },
                    { 35, (byte)14, (byte)0 },
                    { 35, (byte)10, (byte)2 },
                    { 35, (byte)9, (byte)0 },
                    { 35, (byte)8, (byte)10 },
                    { 35, (byte)7, (byte)5 },
                    { 35, (byte)5, (byte)5 },
                    { 35, (byte)6, (byte)10 },
                    { 35, (byte)4, (byte)0 },
                    { 35, (byte)3, (byte)0 },
                    { 35, (byte)2, (byte)5 },
                    { 35, (byte)13, (byte)0 },
                    { 35, (byte)1, (byte)5 },
                    { 34, (byte)14, (byte)0 },
                    { 34, (byte)10, (byte)2 },
                    { 34, (byte)9, (byte)0 },
                    { 34, (byte)8, (byte)0 },
                    { 34, (byte)5, (byte)10 },
                    { 32, (byte)9, (byte)0 },
                    { 32, (byte)8, (byte)0 },
                    { 32, (byte)7, (byte)5 },
                    { 30, (byte)8, (byte)0 },
                    { 30, (byte)7, (byte)5 },
                    { 30, (byte)5, (byte)10 },
                    { 30, (byte)6, (byte)5 },
                    { 30, (byte)4, (byte)5 },
                    { 30, (byte)3, (byte)0 },
                    { 30, (byte)2, (byte)5 },
                    { 30, (byte)13, (byte)0 },
                    { 30, (byte)1, (byte)5 },
                    { 29, (byte)14, (byte)0 },
                    { 29, (byte)10, (byte)2 },
                    { 29, (byte)9, (byte)0 },
                    { 29, (byte)8, (byte)0 },
                    { 29, (byte)7, (byte)10 },
                    { 29, (byte)5, (byte)10 },
                    { 29, (byte)6, (byte)0 },
                    { 29, (byte)4, (byte)0 },
                    { 30, (byte)9, (byte)0 },
                    { 30, (byte)10, (byte)2 },
                    { 30, (byte)14, (byte)0 },
                    { 31, (byte)1, (byte)5 },
                    { 32, (byte)5, (byte)10 },
                    { 32, (byte)6, (byte)10 },
                    { 32, (byte)4, (byte)0 },
                    { 32, (byte)3, (byte)0 },
                    { 32, (byte)2, (byte)10 },
                    { 32, (byte)13, (byte)0 },
                    { 32, (byte)1, (byte)5 },
                    { 31, (byte)14, (byte)0 },
                    { 36, (byte)13, (byte)0 },
                    { 31, (byte)10, (byte)2 },
                    { 31, (byte)8, (byte)10 },
                    { 31, (byte)7, (byte)0 },
                    { 31, (byte)5, (byte)10 },
                    { 31, (byte)6, (byte)10 },
                    { 31, (byte)4, (byte)0 },
                    { 31, (byte)3, (byte)0 },
                    { 31, (byte)2, (byte)5 },
                    { 31, (byte)13, (byte)0 },
                    { 31, (byte)9, (byte)0 },
                    { 43, (byte)3, (byte)10 },
                    { 36, (byte)2, (byte)0 },
                    { 36, (byte)4, (byte)5 },
                    { 41, (byte)4, (byte)0 },
                    { 41, (byte)3, (byte)5 },
                    { 41, (byte)2, (byte)10 },
                    { 41, (byte)13, (byte)0 },
                    { 41, (byte)1, (byte)10 },
                    { 40, (byte)14, (byte)0 },
                    { 40, (byte)10, (byte)2 },
                    { 40, (byte)9, (byte)0 },
                    { 40, (byte)8, (byte)5 },
                    { 40, (byte)7, (byte)0 },
                    { 40, (byte)5, (byte)5 },
                    { 40, (byte)6, (byte)10 },
                    { 40, (byte)4, (byte)0 },
                    { 40, (byte)3, (byte)5 },
                    { 40, (byte)2, (byte)5 },
                    { 40, (byte)13, (byte)0 },
                    { 40, (byte)1, (byte)10 },
                    { 41, (byte)6, (byte)5 },
                    { 39, (byte)14, (byte)0 },
                    { 41, (byte)5, (byte)10 },
                    { 41, (byte)8, (byte)0 },
                    { 43, (byte)13, (byte)0 },
                    { 43, (byte)1, (byte)10 },
                    { 42, (byte)14, (byte)0 },
                    { 42, (byte)10, (byte)2 },
                    { 42, (byte)9, (byte)0 },
                    { 42, (byte)8, (byte)0 },
                    { 42, (byte)7, (byte)10 },
                    { 42, (byte)5, (byte)10 },
                    { 42, (byte)6, (byte)0 },
                    { 42, (byte)4, (byte)5 },
                    { 42, (byte)3, (byte)0 },
                    { 42, (byte)2, (byte)10 },
                    { 42, (byte)13, (byte)0 },
                    { 42, (byte)1, (byte)5 },
                    { 41, (byte)14, (byte)0 },
                    { 41, (byte)10, (byte)2 },
                    { 41, (byte)9, (byte)0 },
                    { 41, (byte)7, (byte)5 },
                    { 39, (byte)10, (byte)2 },
                    { 39, (byte)9, (byte)0 },
                    { 39, (byte)8, (byte)5 },
                    { 37, (byte)9, (byte)1 },
                    { 37, (byte)8, (byte)0 },
                    { 37, (byte)7, (byte)10 },
                    { 37, (byte)5, (byte)10 },
                    { 37, (byte)6, (byte)0 },
                    { 37, (byte)4, (byte)0 },
                    { 37, (byte)3, (byte)10 },
                    { 37, (byte)2, (byte)0 },
                    { 37, (byte)13, (byte)0 },
                    { 37, (byte)1, (byte)10 },
                    { 36, (byte)14, (byte)0 },
                    { 36, (byte)10, (byte)2 },
                    { 36, (byte)9, (byte)0 },
                    { 36, (byte)8, (byte)0 },
                    { 36, (byte)7, (byte)10 },
                    { 36, (byte)5, (byte)10 },
                    { 36, (byte)6, (byte)5 },
                    { 37, (byte)10, (byte)2 },
                    { 37, (byte)14, (byte)0 },
                    { 38, (byte)1, (byte)0 },
                    { 38, (byte)13, (byte)0 },
                    { 39, (byte)7, (byte)10 },
                    { 39, (byte)5, (byte)10 },
                    { 39, (byte)6, (byte)5 },
                    { 39, (byte)4, (byte)0 },
                    { 39, (byte)3, (byte)5 },
                    { 39, (byte)2, (byte)0 },
                    { 39, (byte)13, (byte)0 },
                    { 39, (byte)1, (byte)5 },
                    { 36, (byte)3, (byte)5 },
                    { 38, (byte)14, (byte)0 },
                    { 38, (byte)9, (byte)0 },
                    { 38, (byte)8, (byte)5 },
                    { 38, (byte)7, (byte)10 },
                    { 38, (byte)5, (byte)10 },
                    { 38, (byte)6, (byte)10 },
                    { 38, (byte)4, (byte)0 },
                    { 38, (byte)3, (byte)0 },
                    { 38, (byte)2, (byte)0 },
                    { 38, (byte)10, (byte)2 },
                    { 113, (byte)14, (byte)0 }
                });

            migrationBuilder.CreateIndex(
                name: "IX_ProfessionStatistic_StatisticId",
                table: "ProfessionStatistic",
                column: "StatisticId");
        }
    }
}